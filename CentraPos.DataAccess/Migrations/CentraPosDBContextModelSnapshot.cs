// <auto-generated />
using System;
using CentraPos.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CentraPos.DataAccess.Migrations
{
    [DbContext(typeof(CentraPosDBContext))]
    partial class CentraPosDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeActivityLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("srActivityLog");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeBusinessPartner", b =>
                {
                    b.Property<string>("BusinessPartnerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPartnerType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPartnerDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPartnerGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPartnerGroupCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsVoided")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriceListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RNC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessPartnerCode", "BusinessPartnerType");

                    b.HasIndex("BusinessPartnerGroupCode1");

                    b.HasIndex("PriceListCode1");

                    b.ToTable("srBusinessPartner");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeBusinessPartnerContact", b =>
                {
                    b.Property<string>("BusinessPartnerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPartnerContactCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessPartnerCode", "BusinessPartnerContactCode");

                    b.ToTable("srBusinessPartnerContact");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeBusinessPartnerGroup", b =>
                {
                    b.Property<string>("BusinessPartnerGroupCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPartnerGroupDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessPartnerGroupCode");

                    b.ToTable("srBusinessPartnerGroup");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeDepartment", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentCode");

                    b.ToTable("srDepartment");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeItem", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsVoided")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<double>("NetWeight")
                        .HasColumnType("float");

                    b.Property<int>("ShortageLevel")
                        .HasColumnType("int");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UnitMeasureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitMeasureCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemCode");

                    b.HasIndex("DepartmentCode1");

                    b.HasIndex("TaxCode1");

                    b.HasIndex("UnitMeasureCode1");

                    b.ToTable("srItem");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeItemWarehouse", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<double>("QuantityOnHand")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemCode", "WarehouseCode");

                    b.HasIndex("WarehouseCode");

                    b.ToTable("srItemWarehouse");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DePaymentType", b =>
                {
                    b.Property<string>("PaymentTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTypeCode");

                    b.ToTable("srPaymentType");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DePosClosureDetail", b =>
                {
                    b.Property<int>("PosClosureHeadId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StorePosCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TransactionNumber")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NCF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PosClosureHeadId", "StoreCode", "StorePosCode", "TransactionNumber");

                    b.ToTable("srPosClosureDetail");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DePosClosureHead", b =>
                {
                    b.Property<int>("PosClosureHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BeginAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorePosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PosClosureHeadId");

                    b.ToTable("srPosClosureHead");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DePrice", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PriceListCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriceListCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SellPrice")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemCode", "PriceListCode");

                    b.HasIndex("ItemCode1");

                    b.HasIndex("PriceListCode1");

                    b.ToTable("srPrice");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DePriceList", b =>
                {
                    b.Property<string>("PriceListCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriceListDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriceListCode");

                    b.ToTable("srPriceList");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellOrder", b =>
                {
                    b.Property<int>("SellOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DocDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("DocNetTotal")
                        .HasColumnType("float");

                    b.Property<double>("DocTotal")
                        .HasColumnType("float");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorePosCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalDiscount")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VatSum")
                        .HasColumnType("float");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SellOrderId");

                    b.ToTable("srSellOrder");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellOrderDetail", b =>
                {
                    b.Property<int>("SellOrderId")
                        .HasColumnType("int");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("PriceAftVat")
                        .HasColumnType("float");

                    b.Property<double>("PriceBefDiscounts")
                        .HasColumnType("float");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("TotalRowValue")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VatPercent")
                        .HasColumnType("float");

                    b.Property<double>("VatValue")
                        .HasColumnType("float");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SellOrderId", "LineNumber");

                    b.ToTable("srSellOrderDetail");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellTransactionDetail", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PosCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TransactionNumber")
                        .HasColumnType("float");

                    b.Property<double>("RowNumber")
                        .HasColumnType("float");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<double>("DiscountOnItem")
                        .HasColumnType("float");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriceListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("RowValue")
                        .HasColumnType("float");

                    b.Property<double>("SellPrice")
                        .HasColumnType("float");

                    b.Property<string>("StorePosCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StorePosStoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaxPercent")
                        .HasColumnType("float");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreCode", "PosCode", "TransactionDateTime", "TransactionNumber", "RowNumber");

                    b.HasIndex("ItemCode1");

                    b.HasIndex("PriceListCode1");

                    b.HasIndex("StorePosStoreCode", "StorePosCode");

                    b.ToTable("srSellTransactionDetail");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellTransactionHead", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PosCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TransactionNumber")
                        .HasColumnType("float");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NCF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellOrderId")
                        .HasColumnType("int");

                    b.Property<double>("TotalDiscount")
                        .HasColumnType("float");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreCode", "PosCode", "TransactionDateTime", "TransactionNumber");

                    b.ToTable("srSellTransactionHead");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellTransactionPayment", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PosCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TransactionNumber")
                        .HasColumnType("float");

                    b.Property<long>("RowNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentValue")
                        .HasColumnType("float");

                    b.Property<string>("SellTransactionHeadPosCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellTransactionHeadStoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("SellTransactionHeadTransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("SellTransactionHeadTransactionNumber")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreCode", "PosCode", "TransactionDateTime", "TransactionNumber", "RowNumber");

                    b.HasIndex("SellTransactionHeadStoreCode", "SellTransactionHeadPosCode", "SellTransactionHeadTransactionDateTime", "SellTransactionHeadTransactionNumber");

                    b.ToTable("srSellTransactionPayment");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeStore", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaxDiscAmount")
                        .HasColumnType("float");

                    b.Property<double>("MaxDiscPercent")
                        .HasColumnType("float");

                    b.Property<int>("NCFSequence1")
                        .HasColumnType("int");

                    b.Property<int>("NCFSequence2")
                        .HasColumnType("int");

                    b.Property<string>("NIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListCode1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RNC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SequenceDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseCode1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StoreCode");

                    b.HasIndex("PriceListCode1");

                    b.HasIndex("WarehouseCode1");

                    b.ToTable("srStore");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeStorePos", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StorePosCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StorePosDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreCode", "StorePosCode");

                    b.ToTable("srStorePos");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeTable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyFixed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyVariable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("srTable");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeTax", b =>
                {
                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaxPercent")
                        .HasColumnType("float");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaxCode");

                    b.ToTable("srTax");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeUnitMeasure", b =>
                {
                    b.Property<string>("UnitMeasureCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitMeasureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitMeasureCode");

                    b.ToTable("srUnitMeasure");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeUser", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsEditing")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserCode");

                    b.ToTable("srUser");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeUserMobileProfile", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MobileProfileType")
                        .HasColumnType("int");

                    b.Property<string>("Param1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StoreCode", "UserCode");

                    b.HasIndex("UserCode1");

                    b.ToTable("srUserMobileProfile");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeUserSellOrder", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SellOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserOrderState")
                        .HasColumnType("int");

                    b.HasKey("UserCode", "SellOrderId");

                    b.ToTable("srUserSellOrder");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeWarehouse", b =>
                {
                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseCode");

                    b.ToTable("srWarehouse");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeBusinessPartner", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeBusinessPartnerGroup", "BusinessPartnerGroup")
                        .WithMany("BusinessPartners")
                        .HasForeignKey("BusinessPartnerGroupCode1");

                    b.HasOne("CentraPos.DataAccess.DataEntities.DePriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListCode1");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeItem", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode1");

                    b.HasOne("CentraPos.DataAccess.DataEntities.DeTax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxCode1");

                    b.HasOne("CentraPos.DataAccess.DataEntities.DeUnitMeasure", "UnitMeasure")
                        .WithMany("Items")
                        .HasForeignKey("UnitMeasureCode1");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeItemWarehouse", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentraPos.DataAccess.DataEntities.DeWarehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DePrice", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode1");

                    b.HasOne("CentraPos.DataAccess.DataEntities.DePriceList", "PriceList")
                        .WithMany("Prices")
                        .HasForeignKey("PriceListCode1");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellOrderDetail", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeSellOrder", "SellOrder")
                        .WithMany("SellOrderDetails")
                        .HasForeignKey("SellOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellTransactionDetail", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode1");

                    b.HasOne("CentraPos.DataAccess.DataEntities.DePriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListCode1");

                    b.HasOne("CentraPos.DataAccess.DataEntities.DeStore", "Store")
                        .WithMany()
                        .HasForeignKey("StoreCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentraPos.DataAccess.DataEntities.DeStorePos", "StorePos")
                        .WithMany()
                        .HasForeignKey("StorePosStoreCode", "StorePosCode");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellTransactionHead", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeStore", "Store")
                        .WithMany()
                        .HasForeignKey("StoreCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeSellTransactionPayment", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeSellTransactionHead", "SellTransactionHead")
                        .WithMany()
                        .HasForeignKey("SellTransactionHeadStoreCode", "SellTransactionHeadPosCode", "SellTransactionHeadTransactionDateTime", "SellTransactionHeadTransactionNumber");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeStore", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DePriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListCode1");

                    b.HasOne("CentraPos.DataAccess.DataEntities.DeWarehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseCode1");
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeStorePos", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeStore", "Store")
                        .WithMany("StorePoses")
                        .HasForeignKey("StoreCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CentraPos.DataAccess.DataEntities.DeUserMobileProfile", b =>
                {
                    b.HasOne("CentraPos.DataAccess.DataEntities.DeUser", "User")
                        .WithMany()
                        .HasForeignKey("UserCode1");
                });
#pragma warning restore 612, 618
        }
    }
}
