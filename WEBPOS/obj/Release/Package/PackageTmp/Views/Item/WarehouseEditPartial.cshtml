@model WEBPOS.DataAccess.DataEntities.DeItemWarehouse
@{
    Layout = null;
}

@using (Html.BeginForm("WarehouseManage", "Item", FormMethod.Post, new { id = "dataForm", onkeydown = "return (event.keyCode!=13);" }))
{
    @Html.HiddenFor(x => x.ItemCode)
    <div class="container form-group">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <a class="close" data-dismiss="modal">&times;</a>
                    <h4 class="modal-title">Editar Articulo en Almacén</h4>
                </div>

                <div class="modal-body col-md-12">
                    <div class="form-group col-md-4">
                        @Html.Label("Almancén")
                        @{
                            List<SelectListItem> list = new List<SelectListItem>();
                            foreach (var ob in WEBPOS.DataAccess.BusinessLayer.BlWarehouse.ReadAll())
                            {
                                list.Add(new SelectListItem { Text = ob.WarehouseCode + " | " + ob.WarehouseDescription, Value = ob.WarehouseCode });
                            }
                        }
                        @Html.DropDownListFor(model => model.WarehouseCode, list, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.Label("Cantidad en Mano")
                        @Html.TextBoxFor(m => m.QuantityOnHand, new { @class = "form-control", @type = "number" })
                    </div>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-default" data-dismiss="modal">Cerrar</a>
                    @if ((bool)ViewBag.IsEditing)
                    {
                        <a class="btn btn-default" onclick=onFormSubmit();>Guardar</a>
                    }
                </div>
            </div>
        </div>
    </div>
}